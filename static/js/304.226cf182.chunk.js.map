{"version":3,"file":"static/js/304.226cf182.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","pages/MovieDetail/MovieDetail.styled.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 42px;\n`;\n\nexport const MovieItem = styled.li`\n  max-width: 250px;\n  background-color: #ffffff;\n  border-radius: 4px;\n  box-shadow: 4px 4px 5px #242a2a;\n  :hover {\n    box-shadow: 8px 8px 15px #242a2a;\n  }\n`;\n\nexport const NavItem = styled(NavLink)`\n  color: #ffffff;\n  border-radius: 5px;\n  padding: 6px 6px;\n  display: inline-block;\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  color: #000000;\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport const MovieImage = styled.img`\n  border-radius: 5px;\n  width: 250px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  List,\n  MovieItem,\n  NavItem,\n  MovieName,\n  MovieImage,\n} from './MovieList.styled';\n\nexport const MovieList = ({ movies, link }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ poster_path, name, title, id }) => {\n        return (\n          <MovieItem key={id}>\n            <NavItem to={`${link}${id}`} state={{ from: location }}>\n              <MovieImage\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://placehold.co/200x300/476531/ffffff?text=There+is+no+poster&font=roboto.png'\n                }\n                alt={title}\n                width={300}\n              />\n\n              <MovieName>{name || title}</MovieName>\n            </NavItem>\n          </MovieItem>\n        );\n      })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  link: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ListName = styled.h1`\n  display: inline-block;\n  margin: 0 auto;\n  margin-bottom: 32px;\n  background-color: #97c74d;\n  color: #000000;\n  font-weight: 500;\n  padding: 6px 14px;\n  border-radius: 5px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Main } from 'pages/MovieDetail/MovieDetail.styled';\nimport { ListName } from 'pages/Home/Home.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        const movies = await getTrendingMovies();\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <Main>\n      <ListName>Trending today</ListName>\n      {isLoading ? <Loader /> : <MovieList movies={movies} link={'movies/'} />}\n    </Main>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  padding: 36px 16px;\n  max-width: 1240px;\n  margin: 0 auto;\n`;\n\nexport const Button = styled(Link)`\n  display: inline-block;\n  padding: 6px 14px;\n  border: none;\n  border-radius: 5px;\n  background-color: #97c74d;\n  color: #000000;\n  cursor: pointer;\n  outline: none;\n  text-transform: uppercase;\n  margin-bottom: 36px;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    background-color: #242a2a;\n    color: #ffffff;\n  }\n`;\n\nexport const MovieItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 30px;\n  margin-bottom: 36px;\n  @media (min-width: 480px) {\n    grid-template-columns: 200px 1fr;\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: 300px 1fr;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 5px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 48px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieRating = styled.p`\n  display: inline-block;\n  margin-bottom: 20px;\n  background-color: #97c74d;\n  color: #000000;\n  font-weight: 500;\n  padding: 6px 14px;\n  border-radius: 5px;\n`;\n\nexport const MovieOverview = styled.h2`\n  margin-bottom: 14px;\n  font-size: 24px;\n`;\n\nexport const MovieOverviewText = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Genres = styled.h3`\n  margin-bottom: 16px;\n  font-size: 24px;\n`;\n\nexport const AddInfo = styled.h3`\n  margin-bottom: 16px;\n  font-size: 24px;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: inline-block;\n  padding: 6px 14px;\n  border-radius: 5px;\n  background-color: #97c74d;\n  color: #000000;\n  cursor: pointer;\n  text-transform: uppercase;\n  margin-bottom: 16px;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    background-color: #242a2a;\n    color: #ffffff;\n  }\n`;\n\nexport const Error = styled.p`\n  padding: 32px 16px;\n  font-size: 32px;\n  text-align: center;\n  color: #000000;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '9324ab0fa327f5ab48c80a488e3b0e81',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["List","styled","MovieItem","NavItem","NavLink","MovieName","MovieImage","MovieList","movies","link","location","useLocation","map","poster_path","name","title","id","to","state","from","src","alt","width","ListName","Home","useState","setMovies","isLoading","setIsLoading","useEffect","getMovies","getTrendingMovies","results","console","log","Loader","Main","Button","Link","MoviePoster","MovieTitle","MovieRating","MovieOverview","MovieOverviewText","Genres","AddInfo","LinkItem","Error","axios","api_key","params","page","data","searchMovies","query","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}