{"version":3,"file":"static/js/484.c5e4cc74.chunk.js","mappings":"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","sources":["pages/MovieDetail/MovieDetail.jsx","pages/MovieDetail/MovieDetail.styled.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Main,\n  Button,\n  MovieItem,\n  MoviePoster,\n  MovieTitle,\n  MovieRating,\n  MovieOverview,\n  MovieOverviewText,\n  Genres,\n  AddInfo,\n  LinkItem,\n  Error,\n} from './MovieDetail.styled';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        const { poster_path, name, title, overview, genres, vote_average } =\n          await getMovieDetails(movieId);\n        setMovieDetails({\n          poster_path,\n          name: name || undefined,\n          title: title || undefined,\n          vote_average: vote_average.toFixed(2),\n          overview,\n          genres: genres.map(({ name }) => <li>{name}</li>),\n        });\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [movieId]);\n\n  const hasError = error.length > 0;\n  const { poster_path, name, title, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <>\n      {hasError ? (\n        <Error>\n          <p>Sorry, movie was not found, try again later</p>\n        </Error>\n      ) : (\n        <Main>\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              <Button to={location.state?.from ?? '/'}>Go back</Button>\n              <MovieItem>\n                <MoviePoster\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : 'https://placehold.co/200x300/orange/white?text=There+is+no+poster&font=roboto.png'\n                  }\n                  alt={name || title}\n                />\n                <div>\n                  <MovieTitle>{name || title || 'No name'}</MovieTitle>\n                  <MovieRating>\n                    Rating: {vote_average || 'No votes'}\n                  </MovieRating>\n                  <MovieOverview>Overview:</MovieOverview>\n                  <MovieOverviewText>\n                    {overview || 'No overview'}\n                  </MovieOverviewText>\n                  <Genres>Genres:</Genres>\n                  <p>{genres || 'No genres'}</p>\n                </div>\n              </MovieItem>\n              <div>\n                <AddInfo>Additional information</AddInfo>\n                <ul>\n                  <li>\n                    <LinkItem\n                      to=\"cast\"\n                      state={{ from: location.state?.from ?? '/' }}\n                    >\n                      Cast\n                    </LinkItem>\n                  </li>\n                  <li>\n                    <LinkItem\n                      to=\"reviews\"\n                      state={{ from: location.state?.from ?? '/' }}\n                    >\n                      Reviews\n                    </LinkItem>\n                  </li>\n                </ul>\n              </div>\n              <Outlet />\n            </>\n          )}\n        </Main>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n  padding: 36px 16px;\n  max-width: 1240px;\n  margin: 0 auto;\n`;\n\nexport const Button = styled(Link)`\n  display: inline-block;\n  padding: 6px 14px;\n  border: none;\n  border-radius: 5px;\n  background-color: #97c74d;\n  color: #000000;\n  cursor: pointer;\n  outline: none;\n  text-transform: uppercase;\n  margin-bottom: 36px;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    background-color: #242a2a;\n    color: #ffffff;\n  }\n`;\n\nexport const MovieItem = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 30px;\n  margin-bottom: 36px;\n  @media (min-width: 480px) {\n    grid-template-columns: 200px 1fr;\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: 300px 1fr;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 5px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 48px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieRating = styled.p`\n  display: inline-block;\n  margin-bottom: 20px;\n  background-color: #97c74d;\n  color: #000000;\n  font-weight: 500;\n  padding: 6px 14px;\n  border-radius: 5px;\n`;\n\nexport const MovieOverview = styled.h2`\n  margin-bottom: 14px;\n  font-size: 24px;\n`;\n\nexport const MovieOverviewText = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Genres = styled.h3`\n  margin-bottom: 16px;\n  font-size: 24px;\n`;\n\nexport const AddInfo = styled.h3`\n  margin-bottom: 16px;\n  font-size: 24px;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: inline-block;\n  padding: 6px 14px;\n  border-radius: 5px;\n  background-color: #97c74d;\n  color: #000000;\n  cursor: pointer;\n  text-transform: uppercase;\n  margin-bottom: 16px;\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    background-color: #242a2a;\n    color: #ffffff;\n  }\n`;\n\nexport const Error = styled.p`\n  padding: 32px 16px;\n  font-size: 32px;\n  text-align: center;\n  color: #000000;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '9324ab0fa327f5ab48c80a488e3b0e81',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["MovieDetails","useState","movieDetails","setMovieDetails","error","setError","isLoading","setIsLoading","location","useLocation","movieId","useParams","useEffect","getMovies","getMovieDetails","poster_path","name","title","overview","genres","vote_average","undefined","toFixed","map","message","hasError","length","to","state","from","src","alt","Main","styled","Button","Link","MovieItem","MoviePoster","MovieTitle","MovieRating","MovieOverview","MovieOverviewText","Genres","AddInfo","LinkItem","Error","axios","api_key","getTrendingMovies","params","page","data","searchMovies","query","id","getMovieCredits","cast","getMovieReviews","results"],"sourceRoot":""}